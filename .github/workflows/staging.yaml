name: "Build and deploy to EC2"

on:
  push:
    branches:
      - staging
jobs:
  init:
    runs-on: ubuntu-latest
    name: Setup XeniApp Deployment Environment
    steps:
      - name: Set env to dev
        if: endsWith(github.ref, '/staging')
        run: |
          echo "XENIENV_NAME=dev" >> $GITHUB_ENV
          echo "XENIENV_NAME=dev" >> env.txt
      - name: Set env to prod
        if: endsWith(github.ref, '/main')
        run: |
          echo "XENIENV_NAME=prod" >> $GITHUB_ENV
          echo "XENIENV_NAME=prod" >> env.txt
      - name: Set App Name
        run: echo "APP_NAME=Xeniapp-frontned-${{ env.XENIENV_NAME }}" >> env.txt
      - name: Set Bucket Name
        run: echo "S3-BUCKET=${{ env.XENIENV_NAME }}.booking.clubxeni.com-ui-deploy" >> env.txt
      - name: Set Source Directory
        run: |
          echo "SOURCE_DIR=./build" >> env.txt
      - name: Set Cloudfront Distribution Id
        run: |
          echo "AWS_CF_DISTRIBUTION_ID=E3OPZLT7BMEFOV" >> env.txt
      - name: Upload env-vars
        uses: actions/upload-artifact@v2
        with:
          name: env-vars
          path: env.txt

  build-test-and-upload:
    needs: init
    runs-on: ubuntu-latest
    steps:
      - name: Download env-vars
        uses: actions/download-artifact@v2
        with:
          name: env-vars
      - name: Set Env vars
        run: cat env.txt >> $GITHUB_ENV
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Packages
        run: yarn install

      - name: Run ESLint
        run: yarn run lint

      - name: Run Prettier
        run: yarn run format:check

      - name: Build Application
        run: yarn build

      - name: Upload App to S3 Bucket
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks --delete --cache-control max-age=2592000
        env:
          AWS_S3_BUCKET: ${{ env.S3-BUCKET }}
          SOURCE_DIR: ${{ env.SOURCE_DIR }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_REGION: us-east-1

      - name: Create CloudFront Cache Invalidation
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ env.AWS_CF_DISTRIBUTION_ID }}
          PATHS: '/*'
          AWS_REGION: us-east-1
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}



